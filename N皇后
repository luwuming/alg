https://leetcode-cn.com/problems/n-queens/

class Solution {
private:
    vector<vector<string>> ans;
public:
    vector<vector<string>> solveNQueens(int n) {
        vector<string> board(n,string(n,'.'));  //特殊的初始化方式（string(n,'.'）
        backtrack(board,0);
        return ans;
    }
    void backtrack(vector<string> &board,int row){
        if(row==board.size()){
            ans.push_back(board);
            return ;
        }
        for(int i=0;i<board.size();i++){
            if(judge(board,row,i)){
                board[row][i]='Q';   // 放置皇后
                backtrack(board,row+1);  //dfs
                board[row][i]='.';   //撤销
            }
        }
    }
    
    bool judge(vector<string> &board,int x,int y){
        int n=board.size();
        for(int i=0;i<x;i++)
            if(board[i][y]=='Q')   //列
                return false;
        
        for(int i=x-1,j=y-1;i>=0&&j>=0;j--,i--)
            if(board[i][j]=='Q')     左上
                return false;
        
        for(int i=x-1,j=y+1;i>=0&&j<n;j++,i--)
            if(board[i][j]=='Q')     //右上
                return false;  
        
        return true;
    }
 
};
